Суть:
	Если использовать 2 системы на одном компьютере, то, например, вирус заразивший первую систему (Windows) может изменить файлы второй системы (linux).
	
	Чтобы этого не произошло можно полностью зашифровать системный раздел с linux. После этого максимум что сможет сделать вирус это повредить систему, которую можно просто переустановить. Данные предлагаю хранить на другом незашифрованном разделе. Критичные данные можно хранить в зашифрованных контейнерах на другом разделе (например пароли в контейнерах KeePass, а файлы в контейнерах VeraCrypt).
	
	Сама загрузка в установленную linux происходит с запросом пароля на раздел с системой. Поэтому раздел /boot нужно хранить отдельно на флэшке и вставлять ее только если нужно загрузиться в linux, вынимая перед загрузкой в Windows, чтобы вирус в Windows не смог изменить /boot так, чтобы он сохранил пароль при следующем вводе. Шифровать /boot нельзя, потому что система не сможет с него загрузиться и расшифровать системный раздел.

	Общая структура диска будет такой (только без swap, потому что в новых версиях ubuntu он на системном диске)
		/dev/sda:
			sda1: /boot - ext4 1GB
			sda2: LUKS encrypted partition ~300GB
				LVM Physical Volume ~300GB
					logical volume: /root ext4 296GB
					logical volume: swap 4GB
					
	Как это работает:
		1. Создаем контейнер с шифрованием luks, при входе в систему запустится модуль grub, попросит пароль и расшифрует этот контейнер.
		2. Внутри luks контейнера создать систему виртуального HDD, это lvm. В нем создать обычные разделы. Все создание в lvm производится через спец. утилиту.
		3. Смонтировать системные каталоги с chroot и дописать в файл /etc/crypttab номер luks раздела с которого нужно грузиться (UUID)
		
		Понятия не имею как эта конфигурция читается, если в теории зашифрован весь диск, в том числе /etc раздел.
		При генерации настроек и загрузочной initramfs grub берет /etc/crypttab и генерирует по все по нем?
	
	Похожий вопрос с предложением хранить раздел boot отдельно: https://askubuntu.com/a/166030

Note. Before all it is better to clean usb flash drive for /boot and recreate partions
    sudo wipefs -a -f /dev/sdb
where sdb is the usb drive
	
Шаг за шагом
	0. Предполагается, что вы создали отдельный раздел /boot обычным способом через инстолятор (ниже его монтируем в chroot /mnt чтобы изменить конфиг)
       В данной инструкции предлагается сделать /boot на флэшке.
       То есть нужно создать на флэшке с DOS (не GPT) таблицей раздел в 1 Gb, первичный, и поставить ему флаг boot. Это будет /boot
	1. Создать luks раздел через менеджер дисков (gparted или kde partion manager, или менеджер дисков в инстоляторе). И задать ему пароль.
       Очевиднее создавать luks контейнер не через менеджер дисков, а командами:
            1. создать любой раздел любого формата (можно через менеджер дисков)
            2. Отформатировать его как luks
                sudo cryptsetup luksFormat /dev/sda3
            3. Открыть его (с именем cryptlinux)
                sudo cryptsetup luksOpen /dev/sda3 cryptlinux
            4. Создать на нем lvm
                sudo pvcreate /dev/mapper/cryptlinux
            5. Создать на нем группу (с именем local)
                sudo vgcreate local /dev/mapper/cryptlinux
            6. Создать в группе раздел (с именем root, а 100%FREE отдает все место под него)
                sudo lvcreate -l 100%FREE -n root local
            7. Отформатировать этот раздел в ext4
                sudo mkfs.ext4 /dev/local/root
            8. Посмотреть что получилось:
                sudo lvs    # где колонка LV - это раздел, а VG - это группа
	3. Теперь просто нужно установить Ubuntu обычным способом указав раздел root из LVM как корень / (в инстоляторе он будет виден как отдельный диск)
        Перед установкой спросит отмантировать разделы, закрыть программы использующие разделы HDD/SSD и ответить ДА.
        В качестве цели для загрузчика (bootloader) укажите флэшку где будет /boot раздел (например /dev/sdb или /dev/sdc)
            Так загрузчик Windows не будет затерт и в Windows можно будет загрузиться просто выключив компьютер и вынув флэшку.
        
        ПРОБЛЕМЫ.
            Если установка зависла, на "Определение файловых систем", то проблема в установочной флэшке.
            Попробуйте записать ее методом dd, или через grub. Или ответить ДА на вопрос об отмонтировании дисков перед установкой.
	4. После установки. Запишем номер UUID шифрованного раздела в конфиг, чтобы система знала откуда нужно грузиться
		4.1 Монтируем разделы установленной системы в chroot, чтобы можно было менять ее конфиги
                sudo mount /dev/mapper/local-root /mnt
                sudo mount /dev/sda2 /mnt/boot       # где sda2 это /boot, например на флэшке (то есть скорее всего имя будет sdb1 или sdc1)
                sudo mount --bind /dev /mnt/dev
                sudo chroot /mnt
		4.2 Откроется строка консоли от chroot (root user), через нее тоже монтируем часть устройств
                mount -t proc proc /proc && mount -t sysfs sys /sys && mount -t devpts devpts /dev/pts
		4.3 Создаем файл конфигов (выполнить не от chroot)
                sudo touch /mnt/etc/crypttab
		4.4 Смотрим UUID (где sda3 это раздел luks)
                sudo blkid /dev/sda3
		4.4 Вставляем в /mnt/etc/crypttab текст (где UUID из пункта выше):
                # <target name> <source device> <key file> <options>
                cryptlinux UUID=8b80b3a7-6a33-4db3-87ce-7f126545c74af none luks,retry=1,lvm=local
		4.5 Генерируем файл инициализации (запускать от того же chroot sudo что и выше)
                update-initramfs -k all -c
        4.6 Система готова, но в нее можно загрузиться только после установки grub на флэшку
    5. Устанавливаем /boot раздел с grub на флэшку (только для DOS разметок! НЕ GPT!)
        0.  Не выходя из chroot выше! Если вышли, то выполнить пункт 4 со входом в chroot (до пункта редактирования /mnt/etc/crypttab)
        1.  Если зашифрованный диск закрыт, то монтировать его снова коммандой:
                sudo cryptsetup luksOpen /dev/sda3 cryptlinux   # где sda3 это luks контейнер (который можно увидеть в редакторе разделов kde или gtk)
        2.  Добавить stroki
                GRUB_ENABLE_CRYPTODISK=y
                GRUB_CRYPTODISK_ENABLE=y
            в /mnt/etc/default/grub
        3.  Установить не из chroot, а из обычной консоли (где sdc это флэшка на которой /boot)
                sudo grub-install --force --root-directory=/mnt /dev/sdc --recheck --no-floppy
        4.  выполнить из chroot (ignore warnings???)
                update-grub
        5.  выполнить из chroot
                update-initramfs -k all -c
    6.  Готово. Чтобы случайно не загрузиться с вставленной флэшкой в Windows,
        то например можно изменить порядок загрузки в BIOS и поставить приоритет для usb flash.
        В некоторых BIOS диски UEFI всегда идут перед DOS дисками, и загрузка с них всегда будет в приоритете.
        В некоторых системах можно грузиться с SD карточки, это часто удобно.
    7. Чтобы загрузиться в систему нужно загрузиться с флэшки на которой /boot раздел
        Если с флэшкой что-то случиться, то придется выполнить пункт 5 еще раз и установить /boot раздел туда заново
    8.  После такой конфигурации, если вы выполняете какие-то изменения процесса загрузки (настраиваете параметры ядра, hibernate, загрузку дрйверов).
        То желательно после всего этого выполнить команду обновления инициализатора:
            sudo update-initramfs -u
        Увидеть что что-то не так можно например если при загрузке вылазят ошибки ACPI (но не факт).
    9. После обновления BIOS проверьте настройки BIOS порядка загрузки с flash карты или USB. Они могут стать по умолчанию.
    10. Во время загрузки вынимайте UEFI загрузочные устройства. Чтобы MS-DOS диски грузились первыми. 
    
    9. НЕ СРАБОТАЛО! Делаем авто вход без ввода пароля. Пароль будет храниться на USB Flash Drive.
        0. Источник: https://askubuntu.com/questions/996155/how-do-i-automatically-decrypt-an-encrypted-filesystem-on-the-next-reboot
        1. Создаем файл ключа (который будет заменой пароля):
            sudo dd if=/dev/urandom of=/boot/keyfile bs=1024 count=4
        2. Даем права root читать файл, остальное запрещаем:
            sudo chmod 0400 /boot/keyfile
        3. Добавляем ключ к LUKS (шифрованному) разделу. Где /dev/sda2 это наш LUKS раздел. Попросит ввести пароль от LUKS раздела:
            sudo cryptsetup -v luksAddKey /dev/sda2 /boot/keyfile
        4. Находим UUID раздела /boot где /dev/sdb это флэшка, а sdb1 это /boot раздел на ней:
            blkid /dev/sdb1
        5. Редактируем /etc/crypttab
            sudo geany /etc/crypttab
        6.  В файле /etc/crypttab заменить none (3ий параметр) на UUID из команды пункта 4.
            При этом перед UUID поставить строку "/dev/disk/by-uuid/" (без кавычек):
                cryptlinux UUID=12285699-ef55-43b1-97fb-f568e39d720b /dev/disk/by-uuid/a3004f43-76ce-4a6c-be03-99eb8479719b luks,retry=1,lvm=local
        7.  Указываем ключ в файле /etc/crypttab. Для этого добавляем опцию "keyscript=/lib/cryptsetup/scripts/passdev".
            При этом если есть слово "discard", то его нужно удалить:
                cryptlinux UUID=12285699-ef55-43b1-97fb-f568e39d720b /dev/disk/by-uuid/a3004f43-76ce-4a6c-be03-99eb8479719b luks,retry=1,lvm=local,keyscript=/lib/cryptsetup/scripts/passdev
        8. Выполнить:
            sudo update-initramfs -u
            
    
ПРОБЛЕМА. На флэшку grub может установиться не полностью, тогда нужно гуглить. На самом деле GRUB устанавливается нормально, просто не устанавливается ядро в /boot (см. ниже)
Заметка. Чтобы полностью установить /boot со всем его содержимым на флэшку возможно нужно запустить переустановку ядра, причем в случае проблем указать язык по умолчанию
    LANG=C dpkg -l linux-image*
Если есть доступ к интернету, то можно войти в chroot и установить ядро в систему из интернета.
Как вариант можно попробовать установить ядро с LiveUSB. Затем всеравно придется обновить его на новую версию (скачав из интернета или взяв откуда-то).
    
Как вариант после обновления ядра можно делать бэкап /boot раздела на зашифрованный диск. Тогда если /boot повредиться можно открыть раздел с LiveUSB, перенести все файлы обратно на /boot раздел флэшки, установить загрузчик GRUB заново (войти в chroot и выполнить пункт 5.3). Не проверял.
    
ЛАЙФХАК. Если загрузилась Windows при вставленной флэшке, то скорее всего она не достаточно плотно вставлена для чтения. Можно дождаться загрузки Windows не трогая флэшку, убедиться, что флэшка там не видна и вытащить ее.

Don't install grub bootloader during Ubuntu instalation to C:\ to let Windows use native Windows' bootloader???

Баги. В Ubuntu могут наблдаться различные Warning (предупреждения). Скорее всего из-за багов в дистрибутиве или программе шифрования. Используйте LTS версии Ubuntu.

Recovery after /boot partion is damaged (/dev/sda2 is / partion and /dev/sdc1 is /boot partion):
0. Format Flash Driver with /boot and move backup of the /boot to recreated /boot partion
1. Execute as sudo:                     sudo cryptsetup luksOpen /dev/sda2 cryptlinux
2. Execute as sudo (enter to chroot):   sudo mount /dev/mapper/local-root /mnt && sudo mount /dev/sdc1 /mnt/boot && sudo mount --bind /dev /mnt/dev && sudo chroot /mnt
3. Execute as chroot:                   mount -t proc proc /proc && mount -t sysfs sys /sys && mount -t devpts devpts /dev/pts
3. Go to /mnt/etc/fstab and change UUID of /boot partion to a right value (you can see UUID of the /boot partion in Partion Manager). Fix other UUID if is needed.
3. Copy /boot backup to new partion:    sudo cp -r /mnt/home/user/myBackupFolder/boot/* /mnt/boot/
3. delete /boot/grub to be sure that it is right: sudo rm -rf /mnt/boot/grub
    (We need it to regenerate grub.cfg with NEW /boot partion UUID)
6. Execute as chroot:                   update-initramfs -k all -c
4. Execute as sudo:                     sudo grub-install --force --root-directory=/mnt /dev/sdc --recheck --no-floppy
5. Execute as chroot:                   update-grub

Advance:
6. Execute as chroot:                   update-initramfs -k all -c
5. Execute as chroot:                   update-grub

If /boot containtns garbage you can clear it: sudo rm -rf /mnt/boot/*
